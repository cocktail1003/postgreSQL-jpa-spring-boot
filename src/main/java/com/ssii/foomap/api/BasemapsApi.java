/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.ssii.foomap.api;

import com.ssii.foomap.entity.BaseMapEntity;
import com.ssii.foomap.model.SubjectLayerIndex;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-09-11T08:16:31.504Z")

@Api(value = "basemaps", description = "the basemaps API")
public interface BasemapsApi {

    @ApiOperation(value = "设置一个图层为基础图层", nickname = "addBasemapLayer", notes = "", response = SubjectLayerIndex.class, tags = {"基础地图",})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "OK,", response = SubjectLayerIndex.class)})
    @RequestMapping(value = "/basemaps",method = RequestMethod.POST)
    ResponseEntity<BaseMapEntity> addBasemapLayer(@ApiParam(value = "用户登录成功后的Token", required = true) @RequestHeader(value = "authoration", required = true) String authoration,
                                                  @ApiParam(value = "图层基础信息", required = true) @Valid @RequestBody BaseMapEntity layer);


    @ApiOperation(value = "删除基础中的某个图层", nickname = "getBasemapLayer", notes = "", response = Boolean.class, tags = {"基础地图",})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "OK", response = Boolean.class)})
    @RequestMapping(value = "/basemaps/layers/{id}",method = RequestMethod.DELETE)
    ResponseEntity<Boolean> delBasemapLayer(@ApiParam(value = "用户登录成功后的Token", required = true) @RequestHeader(value = "authoration", required = true) String authoration, @ApiParam(value = "图层编号", required = true) @PathVariable("id") Integer id);


    @ApiOperation(value = "获取所有基础图层概要信息,返回的数据顺序即为在基础地图里的排列顺序", nickname = "getBasemaps", notes = "", response = BaseMapEntity.class, responseContainer = "List", tags = {"基础地图",})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "OK，", response = SubjectLayerIndex.class, responseContainer = "List")})
    @RequestMapping(value = "/basemaps",method = RequestMethod.GET)
    ResponseEntity<List<BaseMapEntity>> getBasemaps(@ApiParam(value = "用户登录成功后的Token", required = true) @RequestHeader(value = "authoration", required = true) String authoration);


    @ApiOperation(value = "编辑基础图层配制，主要是修改图层顺序", nickname = "updateBasemapLayer", notes = "", response = SubjectLayerIndex.class, tags = {"基础地图",})
    @ApiResponses(value = {@ApiResponse(code = 200, message = "OK,", response = SubjectLayerIndex.class)})
    @RequestMapping(value = "/basemaps",method = RequestMethod.PUT)
    ResponseEntity<BaseMapEntity> updateBasemapLayer(@ApiParam(value = "用户登录成功后的Token", required = true) @RequestHeader(value = "authoration", required = true) String authoration,
                                                     @ApiParam(value = "图层基础信息", required = true) @Valid @RequestBody BaseMapEntity layer);

}
